// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:twelve_notes/src/misc/environment.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: Environment.firebaseWebAK,
    appId: Environment.firebaseWebAppID,
    messagingSenderId: Environment.firebaseMessagingSender,
    projectId: Environment.firebaseProjectID,
    authDomain: '${Environment.firebaseProjectID}.firebaseapp.com',
    storageBucket: '${Environment.firebaseProjectID}.appspot.com',
    measurementId: Environment.firebaseWebMeasID,
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: Environment.firebaseAndroidAK,
    appId: Environment.firebaseAndroidAppID,
    messagingSenderId: Environment.firebaseMessagingSender,
    projectId: Environment.firebaseProjectID,
    storageBucket: '${Environment.firebaseProjectID}.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: Environment.firebaseIOSAK,
    appId: Environment.firebaseIOSAppID,
    messagingSenderId: Environment.firebaseMessagingSender,
    projectId: Environment.firebaseProjectID,
    storageBucket: '${Environment.firebaseProjectID}.appspot.com',
    iosClientId: '97424430746-eqh3paseftl6l6hbe9358qiabhl4bldr.apps.googleusercontent.com',
    iosBundleId: 'me.dev.vinrus.twelveNotes',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: Environment.firebaseIOSAK,
    appId: Environment.firebaseIOSAppID,
    messagingSenderId: Environment.firebaseMessagingSender,
    projectId: Environment.firebaseProjectID,
    storageBucket: '${Environment.firebaseProjectID}.appspot.com',
    iosClientId: '97424430746-eqh3paseftl6l6hbe9358qiabhl4bldr.apps.googleusercontent.com',
    iosBundleId: 'me.dev.vinrus.twelveNotes',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: Environment.firebaseWinAK,
    appId: Environment.firebaseWinAppID,
    messagingSenderId: Environment.firebaseMessagingSender,
    projectId: Environment.firebaseProjectID,
    authDomain: '${Environment.firebaseProjectID}.firebaseapp.com',
    storageBucket: '${Environment.firebaseProjectID}.appspot.com',
    measurementId: Environment.firebaseWinMeasID,
  );
}
